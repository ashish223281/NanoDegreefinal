  version: 2.1
  orbs:
    aws-cli: circleci/aws-cli@2.0.3
    aws-eks: circleci/aws-eks@0.2.3
    kubernetes: circleci/kubernetes@0.12.0
  
  executors:
    python:
      docker:
        - image: circleci/python:3.7.3-stretch
    aws:
      docker:
        - image: amazon/aws-cli

  jobs:
    lint-app:
      executor: python
      steps:
        - checkout
        - run:
            name: install dependencies
            command: |
              make setup
              . venv/bin/activate
              make install
        - run:
            name: run lint
            command: |
              . venv/bin/activate
              make lint  

    build-push-docker-image:
      machine: true
      working_directory: ~/app
      steps:
        - checkout
        - run:
            name: build and push docker image
            command: |
              #Login to docker hub
              docker login --username ${DOCKER_USERNAME} --password ${DOCKER_PASSWORD}
              # Build image and add a descriptive tag
              docker build --tag=capstonedocker1 .
              # List docker images
              docker image ls
              # Tag and push image to a docker repository
              docker tag capstonedocker1 ashish223281/capstonedocker1
              docker push ashish223281/capstonedocker1


# Test the Cluster
    test-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
      steps:
        - kubernetes/install
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
        - run:
            command: |
              echo "testing cluster"
              kubectl get services
              kubectl get pods
              kubectl describe pods
              kubectl get nodes
              kubectl get deployment
              kubectl get services -o wide
            name: Test cluster

    # Creation of Cluster
    create-cluster:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
          default: capstonecluster1

      steps:
        - checkout
        - aws-eks/install-aws-iam-authenticator:
            release-tag: ''      
        - run:
            name: Install the eksctl tool
            command: |
              if which eksctl > /dev/null; then
                echo "eksctl is already installed"
                exit 0
              fi
              mkdir -p eksctl_download
              curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
                | tar xz -C eksctl_download
              chmod +x eksctl_download/eksctl
              SUDO=""
              if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
                SUDO="sudo"
              fi
              $SUDO mv eksctl_download/eksctl /usr/local/bin/
              rmdir eksctl_download
        - aws-eks/create-cluster:
            cluster-name: capstonecluster1
            skip-kubectl-install: false
            verbose: 3
            node-type: t2.micro
            nodes-max: 3
            ssh-access: false
            ssh-public-key: ''

    create-deployment:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
      steps:
        - checkout
        - kubernetes/install
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
            cluster-authentication-role-arn: arn:aws:iam::577333125727:role/eksctl-capstonecluster1-cluster-ServiceRole-1LK1ZVRU0VE02   
            install-kubectl: true
        - kubernetes/create-or-update-resource:
            get-rollout-status: true
            resource-file-path: deployments/nginx-deployment.yaml
            resource-name: deployments/mycapstone1
        - kubernetes/create-or-update-resource:
            resource-file-path: deployments/app-service.yaml

  workflows:
    deployment:
      jobs:
        - lint-app
        - create-deployment:
            cluster-name: capstonecluster1
            requires:
              - lint-app             
           
        
